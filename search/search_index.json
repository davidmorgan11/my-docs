{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"angular/","text":"Angular Add themes Nebular ng add @nebular/theme Dependencies AngularFire npm i @angular/fire firebase or this will setup Firebase init as well npm i firebase npm add @angular/fire","title":"Angular"},{"location":"angular/#angular","text":"","title":"Angular"},{"location":"angular/#add-themes","text":"","title":"Add themes"},{"location":"angular/#nebular","text":"ng add @nebular/theme","title":"Nebular"},{"location":"angular/#dependencies","text":"","title":"Dependencies"},{"location":"angular/#angularfire","text":"npm i @angular/fire firebase or this will setup Firebase init as well npm i firebase npm add @angular/fire","title":"AngularFire"},{"location":"firebase/","text":"Firebase Environment Config Set firebase functions:config:set someservice.key=\"THE API KEY\" someservice.id=\"THE CLIENT ID\" Get functions:config:get Access functions.config().someservice.key Remove firebase functions:config:unset key1 key2 Clone firebase functions:config:clone --from <fromProject>","title":"Firebase"},{"location":"firebase/#firebase","text":"","title":"Firebase"},{"location":"firebase/#environment-config","text":"","title":"Environment Config"},{"location":"firebase/#set","text":"firebase functions:config:set someservice.key=\"THE API KEY\" someservice.id=\"THE CLIENT ID\"","title":"Set"},{"location":"firebase/#get","text":"functions:config:get","title":"Get"},{"location":"firebase/#access","text":"functions.config().someservice.key","title":"Access"},{"location":"firebase/#remove","text":"firebase functions:config:unset key1 key2","title":"Remove"},{"location":"firebase/#clone","text":"firebase functions:config:clone --from <fromProject>","title":"Clone"},{"location":"java/","text":"Quick Hints Declarative calculate sum IntStream.of(1, 2, 3, 4, 5).sum(); IntStream.rangeClose(1, 5).sum() Declarative find min List<Integer> numbers = Array.asList(1, 2, 3, 4, 5); numbers.stream().min(Integer::compareTo); Java 8 Lambda Expression Anonymous function Function without a name Does not belong to any class No return type, Java 8 compiler infers return type -> denotes Lambda expression SAM (Single Abstract Method) a functional interface () -> {} (input params) -> {body} Functional Interface @FunctionalInterface public interface Runnable { public abstract run(); // <- SAM }","title":"Java"},{"location":"java/#quick-hints","text":"","title":"Quick Hints"},{"location":"java/#declarative-calculate-sum","text":"IntStream.of(1, 2, 3, 4, 5).sum(); IntStream.rangeClose(1, 5).sum()","title":"Declarative calculate sum"},{"location":"java/#declarative-find-min","text":"List<Integer> numbers = Array.asList(1, 2, 3, 4, 5); numbers.stream().min(Integer::compareTo);","title":"Declarative find min"},{"location":"java/#java-8","text":"","title":"Java 8"},{"location":"java/#lambda-expression","text":"Anonymous function Function without a name Does not belong to any class No return type, Java 8 compiler infers return type -> denotes Lambda expression SAM (Single Abstract Method) a functional interface () -> {} (input params) -> {body}","title":"Lambda Expression"},{"location":"java/#functional-interface","text":"@FunctionalInterface public interface Runnable { public abstract run(); // <- SAM }","title":"Functional Interface"},{"location":"linux/","text":"Linux Borg Backup Backup Script #!/bin/sh REPOSITORY=borg@borg:{hostname} BORG_PASSPHRASE='%C2EYS$k-u=:r' borg create --progress -v --list --compression zlib,6 $REPOSITORY::'{hostname}-{now:%Y-%m-%d}' /etc /usr/local/bin /home/user --exclude /home/user/Downloads BORG_PASSPHRASE='%C2EYu=:r' borg prune -v $REPOSITORY --prefix '{hostname}-' \\ --keep-daily=7 --keep-weekly=4 --keep-monthly=6 Crontab # m h dom mon dow command 01 8 * * * rsync -avzP --delete /home/borg/mybackup borg@mydomain.com:/home/borg/","title":"Linux"},{"location":"linux/#linux","text":"","title":"Linux"},{"location":"linux/#borg-backup","text":"","title":"Borg Backup"},{"location":"linux/#backup-script","text":"#!/bin/sh REPOSITORY=borg@borg:{hostname} BORG_PASSPHRASE='%C2EYS$k-u=:r' borg create --progress -v --list --compression zlib,6 $REPOSITORY::'{hostname}-{now:%Y-%m-%d}' /etc /usr/local/bin /home/user --exclude /home/user/Downloads BORG_PASSPHRASE='%C2EYu=:r' borg prune -v $REPOSITORY --prefix '{hostname}-' \\ --keep-daily=7 --keep-weekly=4 --keep-monthly=6","title":"Backup Script"},{"location":"linux/#crontab","text":"# m h dom mon dow command 01 8 * * * rsync -avzP --delete /home/borg/mybackup borg@mydomain.com:/home/borg/","title":"Crontab"}]}